[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "okopilote-room"
dynamic = ["version"]
description = "Room part of the Okopilote suite"
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
keywords = []
authors = [
  { name = "FranÃ§ois", email = "francoismdj@gmx.com" },
]
classifiers = [
  "Topic :: Software Development :: Embedded Systems",
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "bottle~=0.12.18",
  "requests~=2.22.0",
  "schedule==0.6.0",
  "okopilote-devices-common~=0.0.1"
]
[project.optional-dependencies]
okofen-touch4 = ["okopilote-boilers-okofen-touch4"]
mcp9808 = ["okopilote-devices-mcp9808"]
hdc1008 = ["okopilote-devices-hdc1008"]
usb-x440 = ["okopilote-devices-usb-x440"]

[tool.hatch.build.targets.wheel]
packages = ["src/okopilote"]

[tool.hatch.version]
path = "src/okopilote/room/__about__.py"

[project.scripts]
okopilote-room = "okopilote.room.entry_point:run"

[project.urls]
Documentation = "https://github.com/francoismdj/okopilote/room#readme"
Issues = "https://github.com/francoismdj/okopilote/room/issues"
Source = "https://github.com/francoismdj/okopilote/room"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/okopilote/room tests}"

[tool.coverage.run]
source_pkgs = ["okopilote", "tests"]
branch = true
parallel = true
omit = [
  "src/okopilote/room/__about__.py",
]

[tool.coverage.paths]
okopilote_room = ["src/okopilote/room", "*/room/src/okopilote/room"]
tests = ["tests", "*/room/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
